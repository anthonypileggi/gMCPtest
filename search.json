[{"path":"http://www.stochastic-squirrel.com/gMCPtest/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anthony Pileggi. Maintainer.","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pileggi (2022). gMCPtest: Graph Based Multiple Testing Weight Generator. R package version 0.1.0, http://www.stochastic-squirrel.com/gMCPtest/.","code":"@Manual{,   title = {gMCPtest: Graph Based Multiple Testing Weight Generator},   author = {Anthony Pileggi},   year = {2022},   note = {R package version 0.1.0},   url = {http://www.stochastic-squirrel.com/gMCPtest/}, }"},{"path":[]},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Graph Based Multiple Testing Weight Generator","text":"Compute weights intersection hypothesis closure graph-based multiple testing procedure.","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Graph Based Multiple Testing Weight Generator","text":"CRAN version package, must install development version directly github.","code":"# Install development version from GitHub remotes::install_github(\"anthonypileggi/gMCPtest\")"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Graph Based Multiple Testing Weight Generator","text":"Suppose w represents vector weights defining much overall alpha initially reserved hypothesis. Assume G graph represented matrix transition weights, element (, j) defines much α hypothesis passed hypothesis j. can compute weights intersection hypothesis using:","code":"library(gMCPtest) library(magrittr) generate_weights(G, w)"},{"path":[]},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"example-1","dir":"","previous_headings":"Examples","what":"Example 1","title":"Graph Based Multiple Testing Weight Generator","text":"Following example Bretz et al. (2011) assume primary family hypotheses F1 = {H1, H2} secondary family F2 = {H3, H4} suppose strict hierarchy secondary endpoints H3 H4 assessed primary endpoints H1 H2 rejected, respectively.","code":"G <- matrix(   c(0,0,1,0,     0,0,0,1,     0,1,0,0,     1,0,0,0),    nrow = 4,   byrow = TRUE ) w <- c(1/2, 1/2, 0, 0) generate_weights(G, w) %>%   print_weights() #> # A tibble: 15 x 2 #>    set          weights          #>    <chr>        <chr>            #>  1 {4}          {-, -, -, 1}     #>  2 {3}          {-, -, 1, -}     #>  3 {3, 4}       {-, -, 0.5, 0.5} #>  4 {2}          {-, 1, -, -}     #>  5 {2, 4}       {-, 1, -, 0}     #>  6 {2, 3}       {-, 0.5, 0.5, -} #>  7 {2, 3, 4}    {-, 0.5, 0.5, 0} #>  8 {1}          {1, -, -, -}     #>  9 {1, 4}       {0.5, -, -, 0.5} #> 10 {1, 3}       {1, -, 0, -}     #> 11 {1, 3, 4}    {0.5, -, 0, 0.5} #> 12 {1, 2}       {0.5, 0.5, -, -} #> 13 {1, 2, 4}    {0.5, 0.5, -, 0} #> 14 {1, 2, 3}    {0.5, 0.5, 0, -} #> 15 {1, 2, 3, 4} {0.5, 0.5, 0, 0}"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"example-2","dir":"","previous_headings":"Examples","what":"Example 2","title":"Graph Based Multiple Testing Weight Generator","text":"","code":"# equal weight for all hypotheses w <- rep(1/4, 4) generate_weights(G, w) %>%   print_weights() #> # A tibble: 15 x 2 #>    set          weights                  #>    <chr>        <chr>                    #>  1 {4}          {-, -, -, 1}             #>  2 {3}          {-, -, 1, -}             #>  3 {3, 4}       {-, -, 0.5, 0.5}         #>  4 {2}          {-, 1, -, -}             #>  5 {2, 4}       {-, 0.75, -, 0.25}       #>  6 {2, 3}       {-, 0.25, 0.75, -}       #>  7 {2, 3, 4}    {-, 0.25, 0.5, 0.25}     #>  8 {1}          {1, -, -, -}             #>  9 {1, 4}       {0.25, -, -, 0.75}       #> 10 {1, 3}       {0.75, -, 0.25, -}       #> 11 {1, 3, 4}    {0.25, -, 0.25, 0.5}     #> 12 {1, 2}       {0.5, 0.5, -, -}         #> 13 {1, 2, 4}    {0.25, 0.5, -, 0.25}     #> 14 {1, 2, 3}    {0.5, 0.25, 0.25, -}     #> 15 {1, 2, 3, 4} {0.25, 0.25, 0.25, 0.25}"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"example-3","dir":"","previous_headings":"Examples","what":"Example 3","title":"Graph Based Multiple Testing Weight Generator","text":"Consider 3 hypotheses tested successively.","code":"G <- matrix(   c(0,1,0,     0,0,1,     1,0,0),    nrow = 3,   byrow = TRUE ) w <- c(1, 0 ,0) generate_weights(G, w) %>%   print_weights() #> # A tibble: 7 x 2 #>   set       weights   #>   <chr>     <chr>     #> 1 {3}       {-, -, 1} #> 2 {2}       {-, 1, -} #> 3 {2, 3}    {-, 1, 0} #> 4 {1}       {1, -, -} #> 5 {1, 3}    {1, -, 0} #> 6 {1, 2}    {1, 0, -} #> 7 {1, 2, 3} {1, 0, 0}"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Graph Based Multiple Testing Weight Generator","text":"Graphical approaches multiple comparison procedures using weighted Bonferroni, Simes, parametric tests (Bretz et al., 2011) gMCP package – gMCPtest package really just providing access one function gMCP, generateWeights() function.","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/generate_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all intersection hypotheses and corresponding weights for a given graph — generate_weights","title":"Compute all intersection hypotheses and corresponding weights for a given graph — generate_weights","text":"Compute intersection hypotheses corresponding weights given graph","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/generate_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all intersection hypotheses and corresponding weights for a given graph — generate_weights","text":"","code":"generate_weights(G, w)"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/generate_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all intersection hypotheses and corresponding weights for a given graph — generate_weights","text":"G Graph represented transition matrix w numeric vector weights","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/permutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all permutations for a set of length n — permutations","title":"Generate all permutations for a set of length n — permutations","text":"Generate permutations set length n","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/permutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all permutations for a set of length n — permutations","text":"","code":"permutations(n)"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/permutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all permutations for a set of length n — permutations","text":"n set length","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/power_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a power set of a given set — power_set","title":"Generate a power set of a given set — power_set","text":"Generate power set given set","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/power_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a power set of a given set — power_set","text":"","code":"power_set(s)"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/power_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a power set of a given set — power_set","text":"s set, represented vector","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/print_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Print weights in human-readable format — print_weights","title":"Print weights in human-readable format — print_weights","text":"Print weights human-readable format","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/print_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print weights in human-readable format — print_weights","text":"","code":"print_weights(wts)"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/print_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print weights in human-readable format — print_weights","text":"wts data.frame output /codegenerate_weights","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively compute edge weights for a given graph and intersection hypothesis — update_edges","title":"Recursively compute edge weights for a given graph and intersection hypothesis — update_edges","text":"Recursively compute edge weights given graph intersection hypothesis","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively compute edge weights for a given graph and intersection hypothesis — update_edges","text":"","code":"update_edges(h, G, w)"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively compute edge weights for a given graph and intersection hypothesis — update_edges","text":"h numeric vector binary entries (0,1). G Graph represented transition matrix. w numeric vector weights.","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively compute edge weights for a given graph and intersection hypothesis — update_edges","text":"weight vector","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively compute weights for a given graph and intersection hypothesis — update_weights","title":"Recursively compute weights for a given graph and intersection hypothesis — update_weights","text":"Recursively compute weights given graph intersection hypothesis","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively compute weights for a given graph and intersection hypothesis — update_weights","text":"","code":"update_weights(h, G, w)"},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively compute weights for a given graph and intersection hypothesis — update_weights","text":"h numeric vector binary entries (0,1). G Graph represented transition matrix. w numeric vector weights.","code":""},{"path":"http://www.stochastic-squirrel.com/gMCPtest/reference/update_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively compute weights for a given graph and intersection hypothesis — update_weights","text":"weight vector","code":""}]
